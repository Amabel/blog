<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.amabel.dev/</id><title>Amabel</title><subtitle>Amabel的小破客</subtitle> <updated>2023-06-04T06:01:30+09:00</updated> <author> <name>Weibin Luo</name> <uri>https://blog.amabel.dev/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.amabel.dev/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.amabel.dev/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Weibin Luo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>使用 Nginx 的 X-Accel 功能从 S3 下载文件</title><link href="https://blog.amabel.dev/posts/nginx-x-accel-redirect/" rel="alternate" type="text/html" title="使用 Nginx 的 X-Accel 功能从 S3 下载文件" /><published>2023-04-01T10:30:00+09:00</published> <updated>2023-04-01T10:30:00+09:00</updated> <id>https://blog.amabel.dev/posts/nginx-x-accel-redirect/</id> <content src="https://blog.amabel.dev/posts/nginx-x-accel-redirect/" /> <author> <name>Weibin Luo</name> </author> <category term="技术分享" /> <summary> 具体需求 之前接到一个需求：前端请求下载文件后，先在后端进行权限验证，之后生成 S3 的预签名 URL，再通过 Nginx 进行文件的下载。 流程图： sequenceDiagram autonumber participant browser as Browser participant nginx as Nginx participant backend as Backend participant s3 as AWS S3 browser -&amp;gt;&amp;gt; nginx: 请求下载文件： GET /download?filename=image.jpg activate nginx nginx -&amp;gt;&amp;gt; backend: 获取 S3 预签名 URL： GET /fileUrl?fi... </summary> </entry> <entry><title>新的工作地点</title><link href="https://blog.amabel.dev/posts/new-work-place/" rel="alternate" type="text/html" title="新的工作地点" /><published>2023-01-04T10:30:00+09:00</published> <updated>2023-01-04T10:30:00+09:00</updated> <id>https://blog.amabel.dev/posts/new-work-place/</id> <content src="https://blog.amabel.dev/posts/new-work-place/" /> <author> <name>Weibin Luo</name> </author> <category term="日常" /> <summary> 新的工作地点。可以看到东京塔和富士山 </summary> </entry> <entry><title>一些 JavaScript 的库的整理</title><link href="https://blog.amabel.dev/posts/awesome-js-libraries/" rel="alternate" type="text/html" title="一些 JavaScript 的库的整理" /><published>2022-12-12T10:30:00+09:00</published> <updated>2022-12-12T10:30:00+09:00</updated> <id>https://blog.amabel.dev/posts/awesome-js-libraries/</id> <content src="https://blog.amabel.dev/posts/awesome-js-libraries/" /> <author> <name>Weibin Luo</name> </author> <category term="技术分享" /> <summary> 分享一些开源 JavaScript 库，以及它们的维护情况。 JavaScript Repository Name Keywords Last Updated Note saadeghi/daisyui ui,component 2023/06/03 基于 Tailwind 的 UI 组件库 atomiks/tippyjs ui,tooltip,dropdown 2023/04/16 提示标签 floating-ui/floating-ui ui,anchor 2023/06/02 实现各种组件的定位、... </summary> </entry> <entry><title>味のしない？飴</title><link href="https://blog.amabel.dev/posts/20221105/" rel="alternate" type="text/html" title="味のしない？飴" /><published>2022-11-05T10:30:00+09:00</published> <updated>2022-11-05T10:30:00+09:00</updated> <id>https://blog.amabel.dev/posts/20221105/</id> <content src="https://blog.amabel.dev/posts/20221105/" /> <author> <name>Weibin Luo</name> </author> <category term="日常" /> <summary> 最近罗森出了一款「没有味道的糖」： 比较感兴趣就想买了试试，没想到连问 8 家罗森都没有卖的， 回头上煤炉搜了一下 惊了。 相关链接 カンロ　味のしない？飴　24g｜ローソン公式サイト </summary> </entry> <entry><title>关于 JWT 的签名和验证</title><link href="https://blog.amabel.dev/posts/introduction-to-json-web-token/" rel="alternate" type="text/html" title="关于 JWT 的签名和验证" /><published>2022-10-16T10:30:00+09:00</published> <updated>2022-10-16T10:30:00+09:00</updated> <id>https://blog.amabel.dev/posts/introduction-to-json-web-token/</id> <content src="https://blog.amabel.dev/posts/introduction-to-json-web-token/" /> <author> <name>Weibin Luo</name> </author> <category term="技术分享" /> <summary> 介绍 JWT（JSON Web Token）的文章有很多， 这里主要讲一下 JWT 的签名和验证，以及为什么签名是可信的。 由于 JWT 的签名和验证过程比较繁琐，一般情况下不需要自己手动实现。 我们可以通过调用已经封装好的库来轻松验证 JWT 是否有效，以及获取里面的信息。 这里是一些可用的库：JSON Web Token Libraries - jwt.io JWT 签名和验证的过程 首先来看一下 JWT 的结构，下面是一个有效的 JWT： eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c ... </summary> </entry> </feed>
